"0","# Transform each xts into a clean tibble with only date, adjusted close, and symbol."
"0","tidy_stock <- function(xts_obj, name) {"
"0","  if (is.null(xts_obj)) return(tibble())  "
"0","  df <- data.frame(Date = index(xts_obj), coredata(xts_obj))"
"0","  names(df) <- gsub("".+\\."", """", names(df))  "
"0","  as_tibble(df) |>"
"0","    select(Date, Adjusted) |>"
"0","    mutate(symbol = name)"
"0","}"
"0",""
"0","# Apply the transformation to both baskets."
"0","ai_tidy     <- imap_dfr(ai_list,     ~ tidy_stock(.x, .y)) |> mutate(era = ""AI"")"
"0","dotcom_tidy <- imap_dfr(dotcom_list, ~ tidy_stock(.x, .y)) |> mutate(era = ""Dot-com"")"
"0",""
"0","# Add a reference date (era_start) for each era. This lets me calculate how far each observation is from the beginning of the period."
"0","era_starts <- tibble("
"0","  era = c(""AI"", ""Dot-com""),"
"0","  era_start = c(ai_start, dotcom_start)"
"0",")"
"0",""
"0","#Combine both datasets, normalize prices to 100 at start, and calculate ""era_day""."
"0","#This allows for a fair comparison of price trajectories across different stocks and eras."
"0",""
"0","combined <- bind_rows(ai_tidy, dotcom_tidy) |>"
"0","  inner_join(era_starts, by = ""era"") |>"
"0","  filter(!is.na(Adjusted), Adjusted > 0) |>"
"0","  group_by(symbol) |>"
"0","  arrange(Date, .by_group = TRUE) |>"
"0","  mutate(indexed_price = (Adjusted / first(Adjusted)) * 100) |>"
"0","  ungroup() |>"
"0","  mutate(era_day = as.integer(Date - era_start) + 1) |>"
"0","  filter(era_day >= 1)"
"0",""
"0","write_csv(combined, ""data/processed/combined_tidy_stock_data.csv"")"
"0","""Data processing complete"""
"1","[1]"
"1"," ""Data processing complete"""
"1","
"
